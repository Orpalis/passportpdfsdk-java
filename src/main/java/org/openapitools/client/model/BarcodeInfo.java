/*
 * PassportPDF API
 * Another brick in the cloud
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.Barcode1DSymbology;
import org.openapitools.client.model.BarcodeType;

/**
 * Represents information about a read barcode.
 */
@ApiModel(description = "Represents information about a read barcode.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-04-27T13:23:36.328+02:00[Europe/Paris]")
public class BarcodeInfo {
  public static final String SERIALIZED_NAME_TYPE = "Type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private BarcodeType type;

  public static final String SERIALIZED_NAME_BARCODE1_D_SYMBOLOGY = "Barcode1DSymbology";
  @SerializedName(SERIALIZED_NAME_BARCODE1_D_SYMBOLOGY)
  private Barcode1DSymbology barcode1DSymbology;

  public static final String SERIALIZED_NAME_DATA = "Data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private String data;

  public static final String SERIALIZED_NAME_X1 = "X1";
  @SerializedName(SERIALIZED_NAME_X1)
  private Integer X1;

  public static final String SERIALIZED_NAME_X2 = "X2";
  @SerializedName(SERIALIZED_NAME_X2)
  private Integer X2;

  public static final String SERIALIZED_NAME_X3 = "X3";
  @SerializedName(SERIALIZED_NAME_X3)
  private Integer X3;

  public static final String SERIALIZED_NAME_X4 = "X4";
  @SerializedName(SERIALIZED_NAME_X4)
  private Integer X4;

  public static final String SERIALIZED_NAME_Y1 = "Y1";
  @SerializedName(SERIALIZED_NAME_Y1)
  private Integer Y1;

  public static final String SERIALIZED_NAME_Y2 = "Y2";
  @SerializedName(SERIALIZED_NAME_Y2)
  private Integer Y2;

  public static final String SERIALIZED_NAME_Y3 = "Y3";
  @SerializedName(SERIALIZED_NAME_Y3)
  private Integer Y3;

  public static final String SERIALIZED_NAME_Y4 = "Y4";
  @SerializedName(SERIALIZED_NAME_Y4)
  private Integer Y4;

  public static final String SERIALIZED_NAME_BBOX_LEFT_INCHES = "BboxLeftInches";
  @SerializedName(SERIALIZED_NAME_BBOX_LEFT_INCHES)
  private Float bboxLeftInches;

  public static final String SERIALIZED_NAME_BBOX_TOP_INCHES = "BboxTopInches";
  @SerializedName(SERIALIZED_NAME_BBOX_TOP_INCHES)
  private Float bboxTopInches;

  public static final String SERIALIZED_NAME_BBOX_WIDTH_INCHES = "BboxWidthInches";
  @SerializedName(SERIALIZED_NAME_BBOX_WIDTH_INCHES)
  private Float bboxWidthInches;

  public static final String SERIALIZED_NAME_BBOX_HEIGHT_INCHES = "BboxHeightInches";
  @SerializedName(SERIALIZED_NAME_BBOX_HEIGHT_INCHES)
  private Float bboxHeightInches;

  public static final String SERIALIZED_NAME_PAGE_NUMBER = "PageNumber";
  @SerializedName(SERIALIZED_NAME_PAGE_NUMBER)
  private Integer pageNumber;

  public static final String SERIALIZED_NAME_PAGE_PIXEL_WIDTH = "PagePixelWidth";
  @SerializedName(SERIALIZED_NAME_PAGE_PIXEL_WIDTH)
  private Integer pagePixelWidth;

  public static final String SERIALIZED_NAME_PAGE_PIXEL_HEIGHT = "PagePixelHeight";
  @SerializedName(SERIALIZED_NAME_PAGE_PIXEL_HEIGHT)
  private Integer pagePixelHeight;

  public static final String SERIALIZED_NAME_PAGE_HORIZONTAL_RESOLUTION = "PageHorizontalResolution";
  @SerializedName(SERIALIZED_NAME_PAGE_HORIZONTAL_RESOLUTION)
  private Float pageHorizontalResolution;

  public static final String SERIALIZED_NAME_PAGE_VERTICAL_RESOLUTION = "PageVerticalResolution";
  @SerializedName(SERIALIZED_NAME_PAGE_VERTICAL_RESOLUTION)
  private Float pageVerticalResolution;


  public BarcodeInfo type(BarcodeType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BarcodeType getType() {
    return type;
  }


  public void setType(BarcodeType type) {
    this.type = type;
  }


  public BarcodeInfo barcode1DSymbology(Barcode1DSymbology barcode1DSymbology) {
    
    this.barcode1DSymbology = barcode1DSymbology;
    return this;
  }

   /**
   * Get barcode1DSymbology
   * @return barcode1DSymbology
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Barcode1DSymbology getBarcode1DSymbology() {
    return barcode1DSymbology;
  }


  public void setBarcode1DSymbology(Barcode1DSymbology barcode1DSymbology) {
    this.barcode1DSymbology = barcode1DSymbology;
  }


   /**
   * Specifies the data contained within the barcode.
   * @return data
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the data contained within the barcode.")

  public String getData() {
    return data;
  }




   /**
   * Specifies the horizontal top-left position of the barcode, in pixels.
   * @return X1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the horizontal top-left position of the barcode, in pixels.")

  public Integer getX1() {
    return X1;
  }




   /**
   * Specifies the horizontal top-right position of the barcode, in pixels.
   * @return X2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the horizontal top-right position of the barcode, in pixels.")

  public Integer getX2() {
    return X2;
  }




   /**
   * Specifies the horizontal bottom-left position of the barcode, in pixels.
   * @return X3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the horizontal bottom-left position of the barcode, in pixels.")

  public Integer getX3() {
    return X3;
  }




   /**
   * Specifies the horizontal bottom-right position of the barcode, in pixels.
   * @return X4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the horizontal bottom-right position of the barcode, in pixels.")

  public Integer getX4() {
    return X4;
  }




   /**
   * Specifies the vertical top-left position of the barcode, in pixels.
   * @return Y1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the vertical top-left position of the barcode, in pixels.")

  public Integer getY1() {
    return Y1;
  }




   /**
   * Specifies the vertical top-right position of the barcode, in pixels.
   * @return Y2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the vertical top-right position of the barcode, in pixels.")

  public Integer getY2() {
    return Y2;
  }




   /**
   * Specifies the vertical bottom-left position of the barcode, in pixels.
   * @return Y3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the vertical bottom-left position of the barcode, in pixels.")

  public Integer getY3() {
    return Y3;
  }




   /**
   * Specifies the vertical bottom-right position of the barcode, in pixels.
   * @return Y4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the vertical bottom-right position of the barcode, in pixels.")

  public Integer getY4() {
    return Y4;
  }




   /**
   * Specifies the left coordinates of the bounding box of the barcode, in inches.
   * @return bboxLeftInches
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the left coordinates of the bounding box of the barcode, in inches.")

  public Float getBboxLeftInches() {
    return bboxLeftInches;
  }




   /**
   * Specifies the top coordinates of the bounding box of the barcode, in inches.
   * @return bboxTopInches
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the top coordinates of the bounding box of the barcode, in inches.")

  public Float getBboxTopInches() {
    return bboxTopInches;
  }




   /**
   * Specifies the width of the bounding box of the barcode, in inches.
   * @return bboxWidthInches
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the width of the bounding box of the barcode, in inches.")

  public Float getBboxWidthInches() {
    return bboxWidthInches;
  }




   /**
   * Specifies the height of the bounding box of the barcode, in inches.
   * @return bboxHeightInches
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the height of the bounding box of the barcode, in inches.")

  public Float getBboxHeightInches() {
    return bboxHeightInches;
  }




   /**
   * Specifies the number of the page on which the barcode was read.
   * @return pageNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the number of the page on which the barcode was read.")

  public Integer getPageNumber() {
    return pageNumber;
  }




   /**
   * Specifies the width, in pixels, of the page where the barcode has been decoded.
   * @return pagePixelWidth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the width, in pixels, of the page where the barcode has been decoded.")

  public Integer getPagePixelWidth() {
    return pagePixelWidth;
  }




   /**
   * Specifies the height, in pixels, of the page where the barcode has been decoded.
   * @return pagePixelHeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the height, in pixels, of the page where the barcode has been decoded.")

  public Integer getPagePixelHeight() {
    return pagePixelHeight;
  }




   /**
   * Specifies the horizontal resolution, in pixel per inches, of the page where the barcode has been decoded.
   * @return pageHorizontalResolution
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the horizontal resolution, in pixel per inches, of the page where the barcode has been decoded.")

  public Float getPageHorizontalResolution() {
    return pageHorizontalResolution;
  }




   /**
   * Specifies the vertical resolution, in pixel per inches, of the page where the barcode has been decoded.
   * @return pageVerticalResolution
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the vertical resolution, in pixel per inches, of the page where the barcode has been decoded.")

  public Float getPageVerticalResolution() {
    return pageVerticalResolution;
  }




  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BarcodeInfo barcodeInfo = (BarcodeInfo) o;
    return Objects.equals(this.type, barcodeInfo.type) &&
        Objects.equals(this.barcode1DSymbology, barcodeInfo.barcode1DSymbology) &&
        Objects.equals(this.data, barcodeInfo.data) &&
        Objects.equals(this.X1, barcodeInfo.X1) &&
        Objects.equals(this.X2, barcodeInfo.X2) &&
        Objects.equals(this.X3, barcodeInfo.X3) &&
        Objects.equals(this.X4, barcodeInfo.X4) &&
        Objects.equals(this.Y1, barcodeInfo.Y1) &&
        Objects.equals(this.Y2, barcodeInfo.Y2) &&
        Objects.equals(this.Y3, barcodeInfo.Y3) &&
        Objects.equals(this.Y4, barcodeInfo.Y4) &&
        Objects.equals(this.bboxLeftInches, barcodeInfo.bboxLeftInches) &&
        Objects.equals(this.bboxTopInches, barcodeInfo.bboxTopInches) &&
        Objects.equals(this.bboxWidthInches, barcodeInfo.bboxWidthInches) &&
        Objects.equals(this.bboxHeightInches, barcodeInfo.bboxHeightInches) &&
        Objects.equals(this.pageNumber, barcodeInfo.pageNumber) &&
        Objects.equals(this.pagePixelWidth, barcodeInfo.pagePixelWidth) &&
        Objects.equals(this.pagePixelHeight, barcodeInfo.pagePixelHeight) &&
        Objects.equals(this.pageHorizontalResolution, barcodeInfo.pageHorizontalResolution) &&
        Objects.equals(this.pageVerticalResolution, barcodeInfo.pageVerticalResolution);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, barcode1DSymbology, data, X1, X2, X3, X4, Y1, Y2, Y3, Y4, bboxLeftInches, bboxTopInches, bboxWidthInches, bboxHeightInches, pageNumber, pagePixelWidth, pagePixelHeight, pageHorizontalResolution, pageVerticalResolution);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BarcodeInfo {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    barcode1DSymbology: ").append(toIndentedString(barcode1DSymbology)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    X1: ").append(toIndentedString(X1)).append("\n");
    sb.append("    X2: ").append(toIndentedString(X2)).append("\n");
    sb.append("    X3: ").append(toIndentedString(X3)).append("\n");
    sb.append("    X4: ").append(toIndentedString(X4)).append("\n");
    sb.append("    Y1: ").append(toIndentedString(Y1)).append("\n");
    sb.append("    Y2: ").append(toIndentedString(Y2)).append("\n");
    sb.append("    Y3: ").append(toIndentedString(Y3)).append("\n");
    sb.append("    Y4: ").append(toIndentedString(Y4)).append("\n");
    sb.append("    bboxLeftInches: ").append(toIndentedString(bboxLeftInches)).append("\n");
    sb.append("    bboxTopInches: ").append(toIndentedString(bboxTopInches)).append("\n");
    sb.append("    bboxWidthInches: ").append(toIndentedString(bboxWidthInches)).append("\n");
    sb.append("    bboxHeightInches: ").append(toIndentedString(bboxHeightInches)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pagePixelWidth: ").append(toIndentedString(pagePixelWidth)).append("\n");
    sb.append("    pagePixelHeight: ").append(toIndentedString(pagePixelHeight)).append("\n");
    sb.append("    pageHorizontalResolution: ").append(toIndentedString(pageHorizontalResolution)).append("\n");
    sb.append("    pageVerticalResolution: ").append(toIndentedString(pageVerticalResolution)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

