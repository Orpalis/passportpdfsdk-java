/*
 * PassportPDF API
 * Another brick in the cloud
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Defines the boundary boxes (page boxes) that relate to the size of the pages in the PDF document.
 */
@JsonAdapter(PdfPageBox.Adapter.class)
public enum PdfPageBox {
  
  MEDIABOX("MediaBox"),
  
  CROPBOX("CropBox"),
  
  BLEEDBOX("BleedBox"),
  
  TRIMBOX("TrimBox"),
  
  ARTBOX("ArtBox");

  private String value;

  PdfPageBox(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static PdfPageBox fromValue(String value) {
    for (PdfPageBox b : PdfPageBox.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<PdfPageBox> {
    @Override
    public void write(final JsonWriter jsonWriter, final PdfPageBox enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public PdfPageBox read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return PdfPageBox.fromValue(value);
    }
  }
}

