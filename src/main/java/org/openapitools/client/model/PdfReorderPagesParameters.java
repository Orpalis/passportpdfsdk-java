/*
 * PassportPDF API
 * Another brick in the cloud
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Represents the parameters for a reorder pages action.
 */
@ApiModel(description = "Represents the parameters for a reorder pages action.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-04-27T13:23:36.328+02:00[Europe/Paris]")
public class PdfReorderPagesParameters {
  public static final String SERIALIZED_NAME_FILE_ID = "FileId";
  @SerializedName(SERIALIZED_NAME_FILE_ID)
  private String fileId;

  public static final String SERIALIZED_NAME_PAGE_ORDER = "PageOrder";
  @SerializedName(SERIALIZED_NAME_PAGE_ORDER)
  private String pageOrder;


  public PdfReorderPagesParameters fileId(String fileId) {
    
    this.fileId = fileId;
    return this;
  }

   /**
   * The identifier of the previously uploaded file to be processed.
   * @return fileId
  **/
  @ApiModelProperty(required = true, value = "The identifier of the previously uploaded file to be processed.")

  public String getFileId() {
    return fileId;
  }


  public void setFileId(String fileId) {
    this.fileId = fileId;
  }


  public PdfReorderPagesParameters pageOrder(String pageOrder) {
    
    this.pageOrder = pageOrder;
    return this;
  }

   /**
   * Specifies the new pages order. Must contains page numbers separated by &#39;;&#39; or &#39;,&#39;.  Example for a 6-pages document: \&quot;1;2;4;3;6;5\&quot;.
   * @return pageOrder
  **/
  @ApiModelProperty(required = true, value = "Specifies the new pages order. Must contains page numbers separated by ';' or ','.  Example for a 6-pages document: \"1;2;4;3;6;5\".")

  public String getPageOrder() {
    return pageOrder;
  }


  public void setPageOrder(String pageOrder) {
    this.pageOrder = pageOrder;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PdfReorderPagesParameters pdfReorderPagesParameters = (PdfReorderPagesParameters) o;
    return Objects.equals(this.fileId, pdfReorderPagesParameters.fileId) &&
        Objects.equals(this.pageOrder, pdfReorderPagesParameters.pageOrder);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileId, pageOrder);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PdfReorderPagesParameters {\n");
    sb.append("    fileId: ").append(toIndentedString(fileId)).append("\n");
    sb.append("    pageOrder: ").append(toIndentedString(pageOrder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

