/*
 * PassportPDF API
 * Another brick in the cloud
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Represents the parameters for an image adjustment action.
 */
@ApiModel(description = "Represents the parameters for an image adjustment action.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-04-27T13:23:36.328+02:00[Europe/Paris]")
public class ImageAdjustParameters {
  public static final String SERIALIZED_NAME_FILE_ID = "FileId";
  @SerializedName(SERIALIZED_NAME_FILE_ID)
  private String fileId;

  public static final String SERIALIZED_NAME_PAGE_RANGE = "PageRange";
  @SerializedName(SERIALIZED_NAME_PAGE_RANGE)
  private String pageRange;

  public static final String SERIALIZED_NAME_ROI_LEFT = "RoiLeft";
  @SerializedName(SERIALIZED_NAME_ROI_LEFT)
  private Integer roiLeft = 0;

  public static final String SERIALIZED_NAME_ROI_TOP = "RoiTop";
  @SerializedName(SERIALIZED_NAME_ROI_TOP)
  private Integer roiTop = 0;

  public static final String SERIALIZED_NAME_ROI_WIDTH = "RoiWidth";
  @SerializedName(SERIALIZED_NAME_ROI_WIDTH)
  private Integer roiWidth = 0;

  public static final String SERIALIZED_NAME_ROI_HEIGHT = "RoiHeight";
  @SerializedName(SERIALIZED_NAME_ROI_HEIGHT)
  private Integer roiHeight = 0;

  public static final String SERIALIZED_NAME_GAMMA_CORRECTION = "GammaCorrection";
  @SerializedName(SERIALIZED_NAME_GAMMA_CORRECTION)
  private Integer gammaCorrection = 0;

  public static final String SERIALIZED_NAME_BRIGHTNESS = "Brightness";
  @SerializedName(SERIALIZED_NAME_BRIGHTNESS)
  private Integer brightness = 0;

  public static final String SERIALIZED_NAME_CONTRAST = "Contrast";
  @SerializedName(SERIALIZED_NAME_CONTRAST)
  private Integer contrast = 0;

  public static final String SERIALIZED_NAME_SATURATION = "Saturation";
  @SerializedName(SERIALIZED_NAME_SATURATION)
  private Integer saturation = 0;

  public static final String SERIALIZED_NAME_AUTO_CONTRAST_ENHANCEMENT = "AutoContrastEnhancement";
  @SerializedName(SERIALIZED_NAME_AUTO_CONTRAST_ENHANCEMENT)
  private Boolean autoContrastEnhancement = false;

  public static final String SERIALIZED_NAME_CONTRAST_HISTOGRAM_STRETCH = "ContrastHistogramStretch";
  @SerializedName(SERIALIZED_NAME_CONTRAST_HISTOGRAM_STRETCH)
  private Boolean contrastHistogramStretch = false;


  public ImageAdjustParameters fileId(String fileId) {
    
    this.fileId = fileId;
    return this;
  }

   /**
   * The identifier of the previously uploaded file to be processed.
   * @return fileId
  **/
  @ApiModelProperty(required = true, value = "The identifier of the previously uploaded file to be processed.")

  public String getFileId() {
    return fileId;
  }


  public void setFileId(String fileId) {
    this.fileId = fileId;
  }


  public ImageAdjustParameters pageRange(String pageRange) {
    
    this.pageRange = pageRange;
    return this;
  }

   /**
   * Specifies the number of the page, or the range of pages to adjust.
   * @return pageRange
  **/
  @ApiModelProperty(required = true, value = "Specifies the number of the page, or the range of pages to adjust.")

  public String getPageRange() {
    return pageRange;
  }


  public void setPageRange(String pageRange) {
    this.pageRange = pageRange;
  }


  public ImageAdjustParameters roiLeft(Integer roiLeft) {
    
    this.roiLeft = roiLeft;
    return this;
  }

   /**
   * Specifies the left coordinate, in pixel, of the region to process.
   * @return roiLeft
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the left coordinate, in pixel, of the region to process.")

  public Integer getRoiLeft() {
    return roiLeft;
  }


  public void setRoiLeft(Integer roiLeft) {
    this.roiLeft = roiLeft;
  }


  public ImageAdjustParameters roiTop(Integer roiTop) {
    
    this.roiTop = roiTop;
    return this;
  }

   /**
   * Specifies the top coordinate, in pixel, of the region to process.
   * @return roiTop
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the top coordinate, in pixel, of the region to process.")

  public Integer getRoiTop() {
    return roiTop;
  }


  public void setRoiTop(Integer roiTop) {
    this.roiTop = roiTop;
  }


  public ImageAdjustParameters roiWidth(Integer roiWidth) {
    
    this.roiWidth = roiWidth;
    return this;
  }

   /**
   * Specifies the width, in pixel, of the region to process. 0 causes the entire image to be processed.
   * @return roiWidth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the width, in pixel, of the region to process. 0 causes the entire image to be processed.")

  public Integer getRoiWidth() {
    return roiWidth;
  }


  public void setRoiWidth(Integer roiWidth) {
    this.roiWidth = roiWidth;
  }


  public ImageAdjustParameters roiHeight(Integer roiHeight) {
    
    this.roiHeight = roiHeight;
    return this;
  }

   /**
   * Specifies the height, in pixel, of the region to process. 0 causes the entire image to be processed.
   * @return roiHeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the height, in pixel, of the region to process. 0 causes the entire image to be processed.")

  public Integer getRoiHeight() {
    return roiHeight;
  }


  public void setRoiHeight(Integer roiHeight) {
    this.roiHeight = roiHeight;
  }


  public ImageAdjustParameters gammaCorrection(Integer gammaCorrection) {
    
    this.gammaCorrection = gammaCorrection;
    return this;
  }

   /**
   * Specifies the gamma correction parameter.
   * @return gammaCorrection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the gamma correction parameter.")

  public Integer getGammaCorrection() {
    return gammaCorrection;
  }


  public void setGammaCorrection(Integer gammaCorrection) {
    this.gammaCorrection = gammaCorrection;
  }


  public ImageAdjustParameters brightness(Integer brightness) {
    
    this.brightness = brightness;
    return this;
  }

   /**
   * Specifies the brightness parameter.
   * @return brightness
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the brightness parameter.")

  public Integer getBrightness() {
    return brightness;
  }


  public void setBrightness(Integer brightness) {
    this.brightness = brightness;
  }


  public ImageAdjustParameters contrast(Integer contrast) {
    
    this.contrast = contrast;
    return this;
  }

   /**
   * Specifies the contrast parameter.
   * @return contrast
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the contrast parameter.")

  public Integer getContrast() {
    return contrast;
  }


  public void setContrast(Integer contrast) {
    this.contrast = contrast;
  }


  public ImageAdjustParameters saturation(Integer saturation) {
    
    this.saturation = saturation;
    return this;
  }

   /**
   * Specifies the saturation parameter.
   * @return saturation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the saturation parameter.")

  public Integer getSaturation() {
    return saturation;
  }


  public void setSaturation(Integer saturation) {
    this.saturation = saturation;
  }


  public ImageAdjustParameters autoContrastEnhancement(Boolean autoContrastEnhancement) {
    
    this.autoContrastEnhancement = autoContrastEnhancement;
    return this;
  }

   /**
   * Specifies whether the contrast shall be automatically enhanced.
   * @return autoContrastEnhancement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies whether the contrast shall be automatically enhanced.")

  public Boolean getAutoContrastEnhancement() {
    return autoContrastEnhancement;
  }


  public void setAutoContrastEnhancement(Boolean autoContrastEnhancement) {
    this.autoContrastEnhancement = autoContrastEnhancement;
  }


  public ImageAdjustParameters contrastHistogramStretch(Boolean contrastHistogramStretch) {
    
    this.contrastHistogramStretch = contrastHistogramStretch;
    return this;
  }

   /**
   * Specifies whether a contrast histogram stretch filter shall be performed.
   * @return contrastHistogramStretch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies whether a contrast histogram stretch filter shall be performed.")

  public Boolean getContrastHistogramStretch() {
    return contrastHistogramStretch;
  }


  public void setContrastHistogramStretch(Boolean contrastHistogramStretch) {
    this.contrastHistogramStretch = contrastHistogramStretch;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImageAdjustParameters imageAdjustParameters = (ImageAdjustParameters) o;
    return Objects.equals(this.fileId, imageAdjustParameters.fileId) &&
        Objects.equals(this.pageRange, imageAdjustParameters.pageRange) &&
        Objects.equals(this.roiLeft, imageAdjustParameters.roiLeft) &&
        Objects.equals(this.roiTop, imageAdjustParameters.roiTop) &&
        Objects.equals(this.roiWidth, imageAdjustParameters.roiWidth) &&
        Objects.equals(this.roiHeight, imageAdjustParameters.roiHeight) &&
        Objects.equals(this.gammaCorrection, imageAdjustParameters.gammaCorrection) &&
        Objects.equals(this.brightness, imageAdjustParameters.brightness) &&
        Objects.equals(this.contrast, imageAdjustParameters.contrast) &&
        Objects.equals(this.saturation, imageAdjustParameters.saturation) &&
        Objects.equals(this.autoContrastEnhancement, imageAdjustParameters.autoContrastEnhancement) &&
        Objects.equals(this.contrastHistogramStretch, imageAdjustParameters.contrastHistogramStretch);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileId, pageRange, roiLeft, roiTop, roiWidth, roiHeight, gammaCorrection, brightness, contrast, saturation, autoContrastEnhancement, contrastHistogramStretch);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImageAdjustParameters {\n");
    sb.append("    fileId: ").append(toIndentedString(fileId)).append("\n");
    sb.append("    pageRange: ").append(toIndentedString(pageRange)).append("\n");
    sb.append("    roiLeft: ").append(toIndentedString(roiLeft)).append("\n");
    sb.append("    roiTop: ").append(toIndentedString(roiTop)).append("\n");
    sb.append("    roiWidth: ").append(toIndentedString(roiWidth)).append("\n");
    sb.append("    roiHeight: ").append(toIndentedString(roiHeight)).append("\n");
    sb.append("    gammaCorrection: ").append(toIndentedString(gammaCorrection)).append("\n");
    sb.append("    brightness: ").append(toIndentedString(brightness)).append("\n");
    sb.append("    contrast: ").append(toIndentedString(contrast)).append("\n");
    sb.append("    saturation: ").append(toIndentedString(saturation)).append("\n");
    sb.append("    autoContrastEnhancement: ").append(toIndentedString(autoContrastEnhancement)).append("\n");
    sb.append("    contrastHistogramStretch: ").append(toIndentedString(contrastHistogramStretch)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

