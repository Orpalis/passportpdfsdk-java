/*
 * PassportPDF API
 * Another brick in the cloud
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Specifies the different available PDF/A conformance levels.
 */
@JsonAdapter(PdfAConformance.Adapter.class)
public enum PdfAConformance {
  
  PDFA1A("PDFA1a"),
  
  PDFA1B("PDFA1b"),
  
  PDFA2A("PDFA2a"),
  
  PDFA2B("PDFA2b"),
  
  PDFA2U("PDFA2u"),
  
  PDFA3A("PDFA3a"),
  
  PDFA3B("PDFA3b"),
  
  PDFA3U("PDFA3u");

  private String value;

  PdfAConformance(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static PdfAConformance fromValue(String value) {
    for (PdfAConformance b : PdfAConformance.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<PdfAConformance> {
    @Override
    public void write(final JsonWriter jsonWriter, final PdfAConformance enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public PdfAConformance read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return PdfAConformance.fromValue(value);
    }
  }
}

