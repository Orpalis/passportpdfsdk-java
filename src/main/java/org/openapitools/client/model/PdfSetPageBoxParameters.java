/*
 * PassportPDF API
 * Another brick in the cloud
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.PdfPageBox;

/**
 * Represents the parameters for a SetPageBox action.
 */
@ApiModel(description = "Represents the parameters for a SetPageBox action.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-04-27T13:23:36.328+02:00[Europe/Paris]")
public class PdfSetPageBoxParameters {
  public static final String SERIALIZED_NAME_FILE_ID = "FileId";
  @SerializedName(SERIALIZED_NAME_FILE_ID)
  private String fileId;

  public static final String SERIALIZED_NAME_PAGE_RANGE = "PageRange";
  @SerializedName(SERIALIZED_NAME_PAGE_RANGE)
  private String pageRange;

  public static final String SERIALIZED_NAME_LEFT = "Left";
  @SerializedName(SERIALIZED_NAME_LEFT)
  private Float left;

  public static final String SERIALIZED_NAME_TOP = "Top";
  @SerializedName(SERIALIZED_NAME_TOP)
  private Float top;

  public static final String SERIALIZED_NAME_RIGHT = "Right";
  @SerializedName(SERIALIZED_NAME_RIGHT)
  private Float right;

  public static final String SERIALIZED_NAME_BOTTOM = "Bottom";
  @SerializedName(SERIALIZED_NAME_BOTTOM)
  private Float bottom;

  public static final String SERIALIZED_NAME_PAGE_BOX = "PageBox";
  @SerializedName(SERIALIZED_NAME_PAGE_BOX)
  private PdfPageBox pageBox;


  public PdfSetPageBoxParameters fileId(String fileId) {
    
    this.fileId = fileId;
    return this;
  }

   /**
   * The identifier of the previously uploaded file to be processed.
   * @return fileId
  **/
  @ApiModelProperty(required = true, value = "The identifier of the previously uploaded file to be processed.")

  public String getFileId() {
    return fileId;
  }


  public void setFileId(String fileId) {
    this.fileId = fileId;
  }


  public PdfSetPageBoxParameters pageRange(String pageRange) {
    
    this.pageRange = pageRange;
    return this;
  }

   /**
   * Specifies the number of the page, or the range of page whose page box shall be set.
   * @return pageRange
  **/
  @ApiModelProperty(required = true, value = "Specifies the number of the page, or the range of page whose page box shall be set.")

  public String getPageRange() {
    return pageRange;
  }


  public void setPageRange(String pageRange) {
    this.pageRange = pageRange;
  }


  public PdfSetPageBoxParameters left(Float left) {
    
    this.left = left;
    return this;
  }

   /**
   * Specifies, in points, the newly defined left position of the specified page box.
   * @return left
  **/
  @ApiModelProperty(required = true, value = "Specifies, in points, the newly defined left position of the specified page box.")

  public Float getLeft() {
    return left;
  }


  public void setLeft(Float left) {
    this.left = left;
  }


  public PdfSetPageBoxParameters top(Float top) {
    
    this.top = top;
    return this;
  }

   /**
   * Specifies, in points, the newly defined top position of the specified page box.
   * @return top
  **/
  @ApiModelProperty(required = true, value = "Specifies, in points, the newly defined top position of the specified page box.")

  public Float getTop() {
    return top;
  }


  public void setTop(Float top) {
    this.top = top;
  }


  public PdfSetPageBoxParameters right(Float right) {
    
    this.right = right;
    return this;
  }

   /**
   * Specifies, in points, the newly defined right position of the specified page box.
   * @return right
  **/
  @ApiModelProperty(required = true, value = "Specifies, in points, the newly defined right position of the specified page box.")

  public Float getRight() {
    return right;
  }


  public void setRight(Float right) {
    this.right = right;
  }


  public PdfSetPageBoxParameters bottom(Float bottom) {
    
    this.bottom = bottom;
    return this;
  }

   /**
   * Specifies, in points, the newly defined bottom position of the specified page box.
   * @return bottom
  **/
  @ApiModelProperty(required = true, value = "Specifies, in points, the newly defined bottom position of the specified page box.")

  public Float getBottom() {
    return bottom;
  }


  public void setBottom(Float bottom) {
    this.bottom = bottom;
  }


  public PdfSetPageBoxParameters pageBox(PdfPageBox pageBox) {
    
    this.pageBox = pageBox;
    return this;
  }

   /**
   * Get pageBox
   * @return pageBox
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PdfPageBox getPageBox() {
    return pageBox;
  }


  public void setPageBox(PdfPageBox pageBox) {
    this.pageBox = pageBox;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PdfSetPageBoxParameters pdfSetPageBoxParameters = (PdfSetPageBoxParameters) o;
    return Objects.equals(this.fileId, pdfSetPageBoxParameters.fileId) &&
        Objects.equals(this.pageRange, pdfSetPageBoxParameters.pageRange) &&
        Objects.equals(this.left, pdfSetPageBoxParameters.left) &&
        Objects.equals(this.top, pdfSetPageBoxParameters.top) &&
        Objects.equals(this.right, pdfSetPageBoxParameters.right) &&
        Objects.equals(this.bottom, pdfSetPageBoxParameters.bottom) &&
        Objects.equals(this.pageBox, pdfSetPageBoxParameters.pageBox);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileId, pageRange, left, top, right, bottom, pageBox);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PdfSetPageBoxParameters {\n");
    sb.append("    fileId: ").append(toIndentedString(fileId)).append("\n");
    sb.append("    pageRange: ").append(toIndentedString(pageRange)).append("\n");
    sb.append("    left: ").append(toIndentedString(left)).append("\n");
    sb.append("    top: ").append(toIndentedString(top)).append("\n");
    sb.append("    right: ").append(toIndentedString(right)).append("\n");
    sb.append("    bottom: ").append(toIndentedString(bottom)).append("\n");
    sb.append("    pageBox: ").append(toIndentedString(pageBox)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

