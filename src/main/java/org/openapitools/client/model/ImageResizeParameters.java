/*
 * PassportPDF API
 * Another brick in the cloud
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.ResizeMode;
import org.openapitools.client.model.ResizeUnit;

/**
 * Represents the parameters for an image resize action.
 */
@ApiModel(description = "Represents the parameters for an image resize action.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-04-27T13:23:36.328+02:00[Europe/Paris]")
public class ImageResizeParameters {
  public static final String SERIALIZED_NAME_FILE_ID = "FileId";
  @SerializedName(SERIALIZED_NAME_FILE_ID)
  private String fileId;

  public static final String SERIALIZED_NAME_PAGE_RANGE = "PageRange";
  @SerializedName(SERIALIZED_NAME_PAGE_RANGE)
  private String pageRange;

  public static final String SERIALIZED_NAME_RESIZE_HORIZONTAL = "ResizeHorizontal";
  @SerializedName(SERIALIZED_NAME_RESIZE_HORIZONTAL)
  private Float resizeHorizontal;

  public static final String SERIALIZED_NAME_RESIZE_VERTICAL = "ResizeVertical";
  @SerializedName(SERIALIZED_NAME_RESIZE_VERTICAL)
  private Float resizeVertical;

  public static final String SERIALIZED_NAME_RESIZE_MODE = "ResizeMode";
  @SerializedName(SERIALIZED_NAME_RESIZE_MODE)
  private ResizeMode resizeMode;

  public static final String SERIALIZED_NAME_RESIZE_UNIT = "ResizeUnit";
  @SerializedName(SERIALIZED_NAME_RESIZE_UNIT)
  private ResizeUnit resizeUnit;


  public ImageResizeParameters fileId(String fileId) {
    
    this.fileId = fileId;
    return this;
  }

   /**
   * The identifier of the previously uploaded file to be processed.
   * @return fileId
  **/
  @ApiModelProperty(required = true, value = "The identifier of the previously uploaded file to be processed.")

  public String getFileId() {
    return fileId;
  }


  public void setFileId(String fileId) {
    this.fileId = fileId;
  }


  public ImageResizeParameters pageRange(String pageRange) {
    
    this.pageRange = pageRange;
    return this;
  }

   /**
   * Specifies the number of the page, or the range of pages to resize.
   * @return pageRange
  **/
  @ApiModelProperty(required = true, value = "Specifies the number of the page, or the range of pages to resize.")

  public String getPageRange() {
    return pageRange;
  }


  public void setPageRange(String pageRange) {
    this.pageRange = pageRange;
  }


  public ImageResizeParameters resizeHorizontal(Float resizeHorizontal) {
    
    this.resizeHorizontal = resizeHorizontal;
    return this;
  }

   /**
   * Specifies the resize horizontal parameter.
   * @return resizeHorizontal
  **/
  @ApiModelProperty(required = true, value = "Specifies the resize horizontal parameter.")

  public Float getResizeHorizontal() {
    return resizeHorizontal;
  }


  public void setResizeHorizontal(Float resizeHorizontal) {
    this.resizeHorizontal = resizeHorizontal;
  }


  public ImageResizeParameters resizeVertical(Float resizeVertical) {
    
    this.resizeVertical = resizeVertical;
    return this;
  }

   /**
   * Specifies the resize vertical parameter.
   * @return resizeVertical
  **/
  @ApiModelProperty(required = true, value = "Specifies the resize vertical parameter.")

  public Float getResizeVertical() {
    return resizeVertical;
  }


  public void setResizeVertical(Float resizeVertical) {
    this.resizeVertical = resizeVertical;
  }


  public ImageResizeParameters resizeMode(ResizeMode resizeMode) {
    
    this.resizeMode = resizeMode;
    return this;
  }

   /**
   * Get resizeMode
   * @return resizeMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ResizeMode getResizeMode() {
    return resizeMode;
  }


  public void setResizeMode(ResizeMode resizeMode) {
    this.resizeMode = resizeMode;
  }


  public ImageResizeParameters resizeUnit(ResizeUnit resizeUnit) {
    
    this.resizeUnit = resizeUnit;
    return this;
  }

   /**
   * Get resizeUnit
   * @return resizeUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ResizeUnit getResizeUnit() {
    return resizeUnit;
  }


  public void setResizeUnit(ResizeUnit resizeUnit) {
    this.resizeUnit = resizeUnit;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImageResizeParameters imageResizeParameters = (ImageResizeParameters) o;
    return Objects.equals(this.fileId, imageResizeParameters.fileId) &&
        Objects.equals(this.pageRange, imageResizeParameters.pageRange) &&
        Objects.equals(this.resizeHorizontal, imageResizeParameters.resizeHorizontal) &&
        Objects.equals(this.resizeVertical, imageResizeParameters.resizeVertical) &&
        Objects.equals(this.resizeMode, imageResizeParameters.resizeMode) &&
        Objects.equals(this.resizeUnit, imageResizeParameters.resizeUnit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileId, pageRange, resizeHorizontal, resizeVertical, resizeMode, resizeUnit);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImageResizeParameters {\n");
    sb.append("    fileId: ").append(toIndentedString(fileId)).append("\n");
    sb.append("    pageRange: ").append(toIndentedString(pageRange)).append("\n");
    sb.append("    resizeHorizontal: ").append(toIndentedString(resizeHorizontal)).append("\n");
    sb.append("    resizeVertical: ").append(toIndentedString(resizeVertical)).append("\n");
    sb.append("    resizeMode: ").append(toIndentedString(resizeMode)).append("\n");
    sb.append("    resizeUnit: ").append(toIndentedString(resizeUnit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

