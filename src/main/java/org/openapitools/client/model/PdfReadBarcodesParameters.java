/*
 * PassportPDF API
 * Another brick in the cloud
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.ScanMode;

/**
 * Represents the parameters for a read barcode action.
 */
@ApiModel(description = "Represents the parameters for a read barcode action.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-04-27T13:23:36.328+02:00[Europe/Paris]")
public class PdfReadBarcodesParameters {
  public static final String SERIALIZED_NAME_FILE_ID = "FileId";
  @SerializedName(SERIALIZED_NAME_FILE_ID)
  private String fileId;

  public static final String SERIALIZED_NAME_PAGE_RANGE = "PageRange";
  @SerializedName(SERIALIZED_NAME_PAGE_RANGE)
  private String pageRange;

  public static final String SERIALIZED_NAME_SCAN_MODE = "ScanMode";
  @SerializedName(SERIALIZED_NAME_SCAN_MODE)
  private ScanMode scanMode;

  public static final String SERIALIZED_NAME_SCAN_BARCODE1_D = "ScanBarcode1D";
  @SerializedName(SERIALIZED_NAME_SCAN_BARCODE1_D)
  private Boolean scanBarcode1D = true;

  public static final String SERIALIZED_NAME_SCAN_BARCODE_Q_R = "ScanBarcodeQR";
  @SerializedName(SERIALIZED_NAME_SCAN_BARCODE_Q_R)
  private Boolean scanBarcodeQR = true;

  public static final String SERIALIZED_NAME_SCAN_BARCODE_MICRO_Q_R = "ScanBarcodeMicroQR";
  @SerializedName(SERIALIZED_NAME_SCAN_BARCODE_MICRO_Q_R)
  private Boolean scanBarcodeMicroQR = true;

  public static final String SERIALIZED_NAME_SCAN_BARCODE_P_D_F417 = "ScanBarcodePDF417";
  @SerializedName(SERIALIZED_NAME_SCAN_BARCODE_P_D_F417)
  private Boolean scanBarcodePDF417 = true;

  public static final String SERIALIZED_NAME_SCAN_BARCODE_DATA_MATRIX = "ScanBarcodeDataMatrix";
  @SerializedName(SERIALIZED_NAME_SCAN_BARCODE_DATA_MATRIX)
  private Boolean scanBarcodeDataMatrix = true;

  public static final String SERIALIZED_NAME_SCAN_BARCODE_AZTEC = "ScanBarcodeAztec";
  @SerializedName(SERIALIZED_NAME_SCAN_BARCODE_AZTEC)
  private Boolean scanBarcodeAztec = true;


  public PdfReadBarcodesParameters fileId(String fileId) {
    
    this.fileId = fileId;
    return this;
  }

   /**
   * The identifier of the previously uploaded file to be processed.
   * @return fileId
  **/
  @ApiModelProperty(required = true, value = "The identifier of the previously uploaded file to be processed.")

  public String getFileId() {
    return fileId;
  }


  public void setFileId(String fileId) {
    this.fileId = fileId;
  }


  public PdfReadBarcodesParameters pageRange(String pageRange) {
    
    this.pageRange = pageRange;
    return this;
  }

   /**
   * Specifies the number of the page, or the range of pages to read the barcodes from.
   * @return pageRange
  **/
  @ApiModelProperty(required = true, value = "Specifies the number of the page, or the range of pages to read the barcodes from.")

  public String getPageRange() {
    return pageRange;
  }


  public void setPageRange(String pageRange) {
    this.pageRange = pageRange;
  }


  public PdfReadBarcodesParameters scanMode(ScanMode scanMode) {
    
    this.scanMode = scanMode;
    return this;
  }

   /**
   * Get scanMode
   * @return scanMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ScanMode getScanMode() {
    return scanMode;
  }


  public void setScanMode(ScanMode scanMode) {
    this.scanMode = scanMode;
  }


  public PdfReadBarcodesParameters scanBarcode1D(Boolean scanBarcode1D) {
    
    this.scanBarcode1D = scanBarcode1D;
    return this;
  }

   /**
   * Specifies whether the barcodes of type 1D shall be read.
   * @return scanBarcode1D
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies whether the barcodes of type 1D shall be read.")

  public Boolean getScanBarcode1D() {
    return scanBarcode1D;
  }


  public void setScanBarcode1D(Boolean scanBarcode1D) {
    this.scanBarcode1D = scanBarcode1D;
  }


  public PdfReadBarcodesParameters scanBarcodeQR(Boolean scanBarcodeQR) {
    
    this.scanBarcodeQR = scanBarcodeQR;
    return this;
  }

   /**
   * Specifies whether the barcodes of type QR shall be read.
   * @return scanBarcodeQR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies whether the barcodes of type QR shall be read.")

  public Boolean getScanBarcodeQR() {
    return scanBarcodeQR;
  }


  public void setScanBarcodeQR(Boolean scanBarcodeQR) {
    this.scanBarcodeQR = scanBarcodeQR;
  }


  public PdfReadBarcodesParameters scanBarcodeMicroQR(Boolean scanBarcodeMicroQR) {
    
    this.scanBarcodeMicroQR = scanBarcodeMicroQR;
    return this;
  }

   /**
   * Specifies whether the barcodes of type Micro QR shall be read.
   * @return scanBarcodeMicroQR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies whether the barcodes of type Micro QR shall be read.")

  public Boolean getScanBarcodeMicroQR() {
    return scanBarcodeMicroQR;
  }


  public void setScanBarcodeMicroQR(Boolean scanBarcodeMicroQR) {
    this.scanBarcodeMicroQR = scanBarcodeMicroQR;
  }


  public PdfReadBarcodesParameters scanBarcodePDF417(Boolean scanBarcodePDF417) {
    
    this.scanBarcodePDF417 = scanBarcodePDF417;
    return this;
  }

   /**
   * Specifies whether the barcodes of type PDF 147 shall be read.
   * @return scanBarcodePDF417
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies whether the barcodes of type PDF 147 shall be read.")

  public Boolean getScanBarcodePDF417() {
    return scanBarcodePDF417;
  }


  public void setScanBarcodePDF417(Boolean scanBarcodePDF417) {
    this.scanBarcodePDF417 = scanBarcodePDF417;
  }


  public PdfReadBarcodesParameters scanBarcodeDataMatrix(Boolean scanBarcodeDataMatrix) {
    
    this.scanBarcodeDataMatrix = scanBarcodeDataMatrix;
    return this;
  }

   /**
   * Specifies whether the barcodes of type Data Matrix shall be read.
   * @return scanBarcodeDataMatrix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies whether the barcodes of type Data Matrix shall be read.")

  public Boolean getScanBarcodeDataMatrix() {
    return scanBarcodeDataMatrix;
  }


  public void setScanBarcodeDataMatrix(Boolean scanBarcodeDataMatrix) {
    this.scanBarcodeDataMatrix = scanBarcodeDataMatrix;
  }


  public PdfReadBarcodesParameters scanBarcodeAztec(Boolean scanBarcodeAztec) {
    
    this.scanBarcodeAztec = scanBarcodeAztec;
    return this;
  }

   /**
   * Specifies whether the barcodes of type Aztec shall be read.
   * @return scanBarcodeAztec
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies whether the barcodes of type Aztec shall be read.")

  public Boolean getScanBarcodeAztec() {
    return scanBarcodeAztec;
  }


  public void setScanBarcodeAztec(Boolean scanBarcodeAztec) {
    this.scanBarcodeAztec = scanBarcodeAztec;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PdfReadBarcodesParameters pdfReadBarcodesParameters = (PdfReadBarcodesParameters) o;
    return Objects.equals(this.fileId, pdfReadBarcodesParameters.fileId) &&
        Objects.equals(this.pageRange, pdfReadBarcodesParameters.pageRange) &&
        Objects.equals(this.scanMode, pdfReadBarcodesParameters.scanMode) &&
        Objects.equals(this.scanBarcode1D, pdfReadBarcodesParameters.scanBarcode1D) &&
        Objects.equals(this.scanBarcodeQR, pdfReadBarcodesParameters.scanBarcodeQR) &&
        Objects.equals(this.scanBarcodeMicroQR, pdfReadBarcodesParameters.scanBarcodeMicroQR) &&
        Objects.equals(this.scanBarcodePDF417, pdfReadBarcodesParameters.scanBarcodePDF417) &&
        Objects.equals(this.scanBarcodeDataMatrix, pdfReadBarcodesParameters.scanBarcodeDataMatrix) &&
        Objects.equals(this.scanBarcodeAztec, pdfReadBarcodesParameters.scanBarcodeAztec);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileId, pageRange, scanMode, scanBarcode1D, scanBarcodeQR, scanBarcodeMicroQR, scanBarcodePDF417, scanBarcodeDataMatrix, scanBarcodeAztec);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PdfReadBarcodesParameters {\n");
    sb.append("    fileId: ").append(toIndentedString(fileId)).append("\n");
    sb.append("    pageRange: ").append(toIndentedString(pageRange)).append("\n");
    sb.append("    scanMode: ").append(toIndentedString(scanMode)).append("\n");
    sb.append("    scanBarcode1D: ").append(toIndentedString(scanBarcode1D)).append("\n");
    sb.append("    scanBarcodeQR: ").append(toIndentedString(scanBarcodeQR)).append("\n");
    sb.append("    scanBarcodeMicroQR: ").append(toIndentedString(scanBarcodeMicroQR)).append("\n");
    sb.append("    scanBarcodePDF417: ").append(toIndentedString(scanBarcodePDF417)).append("\n");
    sb.append("    scanBarcodeDataMatrix: ").append(toIndentedString(scanBarcodeDataMatrix)).append("\n");
    sb.append("    scanBarcodeAztec: ").append(toIndentedString(scanBarcodeAztec)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

