/*
 * PassportPDF API
 * Another brick in the cloud
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Represents the parameters for an insert new page action.
 */
@ApiModel(description = "Represents the parameters for an insert new page action.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-04-27T13:23:36.328+02:00[Europe/Paris]")
public class PdfInsertNewPageParameters {
  public static final String SERIALIZED_NAME_FILE_ID = "FileId";
  @SerializedName(SERIALIZED_NAME_FILE_ID)
  private String fileId;

  public static final String SERIALIZED_NAME_PAGE_NUMBER = "PageNumber";
  @SerializedName(SERIALIZED_NAME_PAGE_NUMBER)
  private Integer pageNumber;

  public static final String SERIALIZED_NAME_PAGE_COUNT = "PageCount";
  @SerializedName(SERIALIZED_NAME_PAGE_COUNT)
  private Integer pageCount = 1;

  public static final String SERIALIZED_NAME_WIDTH = "Width";
  @SerializedName(SERIALIZED_NAME_WIDTH)
  private Float width = 595f;

  public static final String SERIALIZED_NAME_HEIGHT = "Height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private Float height = 842f;


  public PdfInsertNewPageParameters fileId(String fileId) {
    
    this.fileId = fileId;
    return this;
  }

   /**
   * The identifier of the previously uploaded file to be processed.
   * @return fileId
  **/
  @ApiModelProperty(required = true, value = "The identifier of the previously uploaded file to be processed.")

  public String getFileId() {
    return fileId;
  }


  public void setFileId(String fileId) {
    this.fileId = fileId;
  }


  public PdfInsertNewPageParameters pageNumber(Integer pageNumber) {
    
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Specifies the number of the page where the new page(s) shall be inserted.
   * @return pageNumber
  **/
  @ApiModelProperty(required = true, value = "Specifies the number of the page where the new page(s) shall be inserted.")

  public Integer getPageNumber() {
    return pageNumber;
  }


  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }


  public PdfInsertNewPageParameters pageCount(Integer pageCount) {
    
    this.pageCount = pageCount;
    return this;
  }

   /**
   * Specifies the number of pages that must be inserted.
   * @return pageCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the number of pages that must be inserted.")

  public Integer getPageCount() {
    return pageCount;
  }


  public void setPageCount(Integer pageCount) {
    this.pageCount = pageCount;
  }


  public PdfInsertNewPageParameters width(Float width) {
    
    this.width = width;
    return this;
  }

   /**
   * Specifies, in points, the width of the page(s) to be inserted.
   * @return width
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies, in points, the width of the page(s) to be inserted.")

  public Float getWidth() {
    return width;
  }


  public void setWidth(Float width) {
    this.width = width;
  }


  public PdfInsertNewPageParameters height(Float height) {
    
    this.height = height;
    return this;
  }

   /**
   * Specifies, in points, the height of the page(s) to be inserted.
   * @return height
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies, in points, the height of the page(s) to be inserted.")

  public Float getHeight() {
    return height;
  }


  public void setHeight(Float height) {
    this.height = height;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PdfInsertNewPageParameters pdfInsertNewPageParameters = (PdfInsertNewPageParameters) o;
    return Objects.equals(this.fileId, pdfInsertNewPageParameters.fileId) &&
        Objects.equals(this.pageNumber, pdfInsertNewPageParameters.pageNumber) &&
        Objects.equals(this.pageCount, pdfInsertNewPageParameters.pageCount) &&
        Objects.equals(this.width, pdfInsertNewPageParameters.width) &&
        Objects.equals(this.height, pdfInsertNewPageParameters.height);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileId, pageNumber, pageCount, width, height);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PdfInsertNewPageParameters {\n");
    sb.append("    fileId: ").append(toIndentedString(fileId)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageCount: ").append(toIndentedString(pageCount)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

