/*
 * PassportPDF API
 * Another brick in the cloud
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.EncryptionAlgorithm;

/**
 * Represents the parameters for a protect action.
 */
@ApiModel(description = "Represents the parameters for a protect action.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-04-27T13:23:36.328+02:00[Europe/Paris]")
public class PdfProtectParameters {
  public static final String SERIALIZED_NAME_FILE_ID = "FileId";
  @SerializedName(SERIALIZED_NAME_FILE_ID)
  private String fileId;

  public static final String SERIALIZED_NAME_OWNER_PASSWORD = "OwnerPassword";
  @SerializedName(SERIALIZED_NAME_OWNER_PASSWORD)
  private String ownerPassword = "";

  public static final String SERIALIZED_NAME_USER_PASSWORD = "UserPassword";
  @SerializedName(SERIALIZED_NAME_USER_PASSWORD)
  private String userPassword = "";

  public static final String SERIALIZED_NAME_ENCRYPTION = "Encryption";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION)
  private EncryptionAlgorithm encryption;

  public static final String SERIALIZED_NAME_CAN_PRINT = "CanPrint";
  @SerializedName(SERIALIZED_NAME_CAN_PRINT)
  private Boolean canPrint = true;

  public static final String SERIALIZED_NAME_CAN_COPY = "CanCopy";
  @SerializedName(SERIALIZED_NAME_CAN_COPY)
  private Boolean canCopy = true;

  public static final String SERIALIZED_NAME_CAN_MODIFY = "CanModify";
  @SerializedName(SERIALIZED_NAME_CAN_MODIFY)
  private Boolean canModify = true;

  public static final String SERIALIZED_NAME_CAN_ADD_NOTES = "CanAddNotes";
  @SerializedName(SERIALIZED_NAME_CAN_ADD_NOTES)
  private Boolean canAddNotes = true;

  public static final String SERIALIZED_NAME_CAN_FILL_FIELDS = "CanFillFields";
  @SerializedName(SERIALIZED_NAME_CAN_FILL_FIELDS)
  private Boolean canFillFields = true;

  public static final String SERIALIZED_NAME_CAN_COPY_ACCESS = "CanCopyAccess";
  @SerializedName(SERIALIZED_NAME_CAN_COPY_ACCESS)
  private Boolean canCopyAccess = true;

  public static final String SERIALIZED_NAME_CAN_ASSEMBLE = "CanAssemble";
  @SerializedName(SERIALIZED_NAME_CAN_ASSEMBLE)
  private Boolean canAssemble = true;

  public static final String SERIALIZED_NAME_CAN_PRINT_FULL = "CanPrintFull";
  @SerializedName(SERIALIZED_NAME_CAN_PRINT_FULL)
  private Boolean canPrintFull = true;


  public PdfProtectParameters fileId(String fileId) {
    
    this.fileId = fileId;
    return this;
  }

   /**
   * The identifier of the previously uploaded file to be processed.
   * @return fileId
  **/
  @ApiModelProperty(required = true, value = "The identifier of the previously uploaded file to be processed.")

  public String getFileId() {
    return fileId;
  }


  public void setFileId(String fileId) {
    this.fileId = fileId;
  }


  public PdfProtectParameters ownerPassword(String ownerPassword) {
    
    this.ownerPassword = ownerPassword;
    return this;
  }

   /**
   * Specifies the owner password to be set.
   * @return ownerPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the owner password to be set.")

  public String getOwnerPassword() {
    return ownerPassword;
  }


  public void setOwnerPassword(String ownerPassword) {
    this.ownerPassword = ownerPassword;
  }


  public PdfProtectParameters userPassword(String userPassword) {
    
    this.userPassword = userPassword;
    return this;
  }

   /**
   * Specifies the user password to be set.
   * @return userPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the user password to be set.")

  public String getUserPassword() {
    return userPassword;
  }


  public void setUserPassword(String userPassword) {
    this.userPassword = userPassword;
  }


  public PdfProtectParameters encryption(EncryptionAlgorithm encryption) {
    
    this.encryption = encryption;
    return this;
  }

   /**
   * Get encryption
   * @return encryption
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EncryptionAlgorithm getEncryption() {
    return encryption;
  }


  public void setEncryption(EncryptionAlgorithm encryption) {
    this.encryption = encryption;
  }


  public PdfProtectParameters canPrint(Boolean canPrint) {
    
    this.canPrint = canPrint;
    return this;
  }

   /**
   * Allows the user to print the document, but possibly not at the highest quality level. Ignored if no encryption algorithm is set.
   * @return canPrint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allows the user to print the document, but possibly not at the highest quality level. Ignored if no encryption algorithm is set.")

  public Boolean getCanPrint() {
    return canPrint;
  }


  public void setCanPrint(Boolean canPrint) {
    this.canPrint = canPrint;
  }


  public PdfProtectParameters canCopy(Boolean canCopy) {
    
    this.canCopy = canCopy;
    return this;
  }

   /**
   * Allows the user to copy or extract text and graphics from the document. Ignored if the no encryption scheme is set.
   * @return canCopy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allows the user to copy or extract text and graphics from the document. Ignored if the no encryption scheme is set.")

  public Boolean getCanCopy() {
    return canCopy;
  }


  public void setCanCopy(Boolean canCopy) {
    this.canCopy = canCopy;
  }


  public PdfProtectParameters canModify(Boolean canModify) {
    
    this.canModify = canModify;
    return this;
  }

   /**
   * Allows the user to modify the document. Ignored if the no encryption scheme is set.
   * @return canModify
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allows the user to modify the document. Ignored if the no encryption scheme is set.")

  public Boolean getCanModify() {
    return canModify;
  }


  public void setCanModify(Boolean canModify) {
    this.canModify = canModify;
  }


  public PdfProtectParameters canAddNotes(Boolean canAddNotes) {
    
    this.canAddNotes = canAddNotes;
    return this;
  }

   /**
   * Allows the user to add annotations. Ignored if the no encryption scheme is set.
   * @return canAddNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allows the user to add annotations. Ignored if the no encryption scheme is set.")

  public Boolean getCanAddNotes() {
    return canAddNotes;
  }


  public void setCanAddNotes(Boolean canAddNotes) {
    this.canAddNotes = canAddNotes;
  }


  public PdfProtectParameters canFillFields(Boolean canFillFields) {
    
    this.canFillFields = canFillFields;
    return this;
  }

   /**
   * Allows the user to fill-in form fields. Only works with 128-bit encryption.
   * @return canFillFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allows the user to fill-in form fields. Only works with 128-bit encryption.")

  public Boolean getCanFillFields() {
    return canFillFields;
  }


  public void setCanFillFields(Boolean canFillFields) {
    this.canFillFields = canFillFields;
  }


  public PdfProtectParameters canCopyAccess(Boolean canCopyAccess) {
    
    this.canCopyAccess = canCopyAccess;
    return this;
  }

   /**
   * Enables copying or extracting for use with accessibility features. Only works with 128-bit encryption.
   * @return canCopyAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Enables copying or extracting for use with accessibility features. Only works with 128-bit encryption.")

  public Boolean getCanCopyAccess() {
    return canCopyAccess;
  }


  public void setCanCopyAccess(Boolean canCopyAccess) {
    this.canCopyAccess = canCopyAccess;
  }


  public PdfProtectParameters canAssemble(Boolean canAssemble) {
    
    this.canAssemble = canAssemble;
    return this;
  }

   /**
   * Allows the user to assemble the document. Only works with 128-bit encryption.
   * @return canAssemble
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allows the user to assemble the document. Only works with 128-bit encryption.")

  public Boolean getCanAssemble() {
    return canAssemble;
  }


  public void setCanAssemble(Boolean canAssemble) {
    this.canAssemble = canAssemble;
  }


  public PdfProtectParameters canPrintFull(Boolean canPrintFull) {
    
    this.canPrintFull = canPrintFull;
    return this;
  }

   /**
   * Allows high resolution printing of the document. Only works with 128-bit encryption.
   * @return canPrintFull
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allows high resolution printing of the document. Only works with 128-bit encryption.")

  public Boolean getCanPrintFull() {
    return canPrintFull;
  }


  public void setCanPrintFull(Boolean canPrintFull) {
    this.canPrintFull = canPrintFull;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PdfProtectParameters pdfProtectParameters = (PdfProtectParameters) o;
    return Objects.equals(this.fileId, pdfProtectParameters.fileId) &&
        Objects.equals(this.ownerPassword, pdfProtectParameters.ownerPassword) &&
        Objects.equals(this.userPassword, pdfProtectParameters.userPassword) &&
        Objects.equals(this.encryption, pdfProtectParameters.encryption) &&
        Objects.equals(this.canPrint, pdfProtectParameters.canPrint) &&
        Objects.equals(this.canCopy, pdfProtectParameters.canCopy) &&
        Objects.equals(this.canModify, pdfProtectParameters.canModify) &&
        Objects.equals(this.canAddNotes, pdfProtectParameters.canAddNotes) &&
        Objects.equals(this.canFillFields, pdfProtectParameters.canFillFields) &&
        Objects.equals(this.canCopyAccess, pdfProtectParameters.canCopyAccess) &&
        Objects.equals(this.canAssemble, pdfProtectParameters.canAssemble) &&
        Objects.equals(this.canPrintFull, pdfProtectParameters.canPrintFull);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileId, ownerPassword, userPassword, encryption, canPrint, canCopy, canModify, canAddNotes, canFillFields, canCopyAccess, canAssemble, canPrintFull);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PdfProtectParameters {\n");
    sb.append("    fileId: ").append(toIndentedString(fileId)).append("\n");
    sb.append("    ownerPassword: ").append(toIndentedString(ownerPassword)).append("\n");
    sb.append("    userPassword: ").append(toIndentedString(userPassword)).append("\n");
    sb.append("    encryption: ").append(toIndentedString(encryption)).append("\n");
    sb.append("    canPrint: ").append(toIndentedString(canPrint)).append("\n");
    sb.append("    canCopy: ").append(toIndentedString(canCopy)).append("\n");
    sb.append("    canModify: ").append(toIndentedString(canModify)).append("\n");
    sb.append("    canAddNotes: ").append(toIndentedString(canAddNotes)).append("\n");
    sb.append("    canFillFields: ").append(toIndentedString(canFillFields)).append("\n");
    sb.append("    canCopyAccess: ").append(toIndentedString(canCopyAccess)).append("\n");
    sb.append("    canAssemble: ").append(toIndentedString(canAssemble)).append("\n");
    sb.append("    canPrintFull: ").append(toIndentedString(canPrintFull)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

