/*
 * PassportPDF API
 * Another brick in the cloud
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Specifies an line annotation&#39;s ending style.
 */
@JsonAdapter(LineAnnotationEndingStyle.Adapter.class)
public enum LineAnnotationEndingStyle {
  
  SQUARE("Square"),
  
  CIRCLE("Circle"),
  
  DIAMOND("Diamond"),
  
  OPENARROW("OpenArrow"),
  
  CLOSEDARROW("ClosedArrow"),
  
  NONE("None"),
  
  BUTT("Butt"),
  
  REVERSEDOPENARROW("ReversedOpenArrow"),
  
  REVERSEDCLOSEDARROW("ReversedClosedArrow"),
  
  SLASH("Slash");

  private String value;

  LineAnnotationEndingStyle(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static LineAnnotationEndingStyle fromValue(String value) {
    for (LineAnnotationEndingStyle b : LineAnnotationEndingStyle.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<LineAnnotationEndingStyle> {
    @Override
    public void write(final JsonWriter jsonWriter, final LineAnnotationEndingStyle enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public LineAnnotationEndingStyle read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return LineAnnotationEndingStyle.fromValue(value);
    }
  }
}

