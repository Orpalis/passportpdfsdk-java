/*
 * PassportPDF API
 * Another brick in the cloud
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.ContentSize;
import org.openapitools.client.model.LineAnnotationEndingStyle;

/**
 * Represents information about the Line Annotation.
 */
@ApiModel(description = "Represents information about the Line Annotation.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-04-27T13:23:36.328+02:00[Europe/Paris]")
public class LineAnnotationParameters {
  public static final String SERIALIZED_NAME_LINE_START_X = "LineStartX";
  @SerializedName(SERIALIZED_NAME_LINE_START_X)
  private Float lineStartX;

  public static final String SERIALIZED_NAME_LINE_START_Y = "LineStartY";
  @SerializedName(SERIALIZED_NAME_LINE_START_Y)
  private Float lineStartY;

  public static final String SERIALIZED_NAME_LINE_END_X = "LineEndX";
  @SerializedName(SERIALIZED_NAME_LINE_END_X)
  private Float lineEndX;

  public static final String SERIALIZED_NAME_LINE_END_Y = "LineEndY";
  @SerializedName(SERIALIZED_NAME_LINE_END_Y)
  private Float lineEndY;

  public static final String SERIALIZED_NAME_TITLE = "Title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_CONTENT = "Content";
  @SerializedName(SERIALIZED_NAME_CONTENT)
  private String content;

  public static final String SERIALIZED_NAME_LINE_START_STYLE = "LineStartStyle";
  @SerializedName(SERIALIZED_NAME_LINE_START_STYLE)
  private LineAnnotationEndingStyle lineStartStyle;

  public static final String SERIALIZED_NAME_LINE_END_STYLE = "LineEndStyle";
  @SerializedName(SERIALIZED_NAME_LINE_END_STYLE)
  private LineAnnotationEndingStyle lineEndStyle;

  public static final String SERIALIZED_NAME_SHOW_CONTENT = "ShowContent";
  @SerializedName(SERIALIZED_NAME_SHOW_CONTENT)
  private Boolean showContent;

  public static final String SERIALIZED_NAME_LINE_WIDTH = "LineWidth";
  @SerializedName(SERIALIZED_NAME_LINE_WIDTH)
  private ContentSize lineWidth;

  public static final String SERIALIZED_NAME_ABSOLUTE_ANNOTATION_LINE_WIDTH = "AbsoluteAnnotationLineWidth";
  @SerializedName(SERIALIZED_NAME_ABSOLUTE_ANNOTATION_LINE_WIDTH)
  private Float absoluteAnnotationLineWidth;

  public static final String SERIALIZED_NAME_COLOR = "Color";
  @SerializedName(SERIALIZED_NAME_COLOR)
  private String color = "red";


  public LineAnnotationParameters lineStartX(Float lineStartX) {
    
    this.lineStartX = lineStartX;
    return this;
  }

   /**
   * Specifies if the horizontal coordinate of line annotation start point.
   * @return lineStartX
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies if the horizontal coordinate of line annotation start point.")

  public Float getLineStartX() {
    return lineStartX;
  }


  public void setLineStartX(Float lineStartX) {
    this.lineStartX = lineStartX;
  }


  public LineAnnotationParameters lineStartY(Float lineStartY) {
    
    this.lineStartY = lineStartY;
    return this;
  }

   /**
   * Specifies if the vertical coordinate of line annotation start point.
   * @return lineStartY
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies if the vertical coordinate of line annotation start point.")

  public Float getLineStartY() {
    return lineStartY;
  }


  public void setLineStartY(Float lineStartY) {
    this.lineStartY = lineStartY;
  }


  public LineAnnotationParameters lineEndX(Float lineEndX) {
    
    this.lineEndX = lineEndX;
    return this;
  }

   /**
   * Specifies if the horizontal coordinate of line annotation end point.
   * @return lineEndX
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies if the horizontal coordinate of line annotation end point.")

  public Float getLineEndX() {
    return lineEndX;
  }


  public void setLineEndX(Float lineEndX) {
    this.lineEndX = lineEndX;
  }


  public LineAnnotationParameters lineEndY(Float lineEndY) {
    
    this.lineEndY = lineEndY;
    return this;
  }

   /**
   * Specifies if the vertical coordinate of line annotation end point.
   * @return lineEndY
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies if the vertical coordinate of line annotation end point.")

  public Float getLineEndY() {
    return lineEndY;
  }


  public void setLineEndY(Float lineEndY) {
    this.lineEndY = lineEndY;
  }


  public LineAnnotationParameters title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Specifies the title of the annotation, if any.
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the title of the annotation, if any.")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public LineAnnotationParameters content(String content) {
    
    this.content = content;
    return this;
  }

   /**
   * Specify the content of the annotation, if any.
   * @return content
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specify the content of the annotation, if any.")

  public String getContent() {
    return content;
  }


  public void setContent(String content) {
    this.content = content;
  }


  public LineAnnotationParameters lineStartStyle(LineAnnotationEndingStyle lineStartStyle) {
    
    this.lineStartStyle = lineStartStyle;
    return this;
  }

   /**
   * Get lineStartStyle
   * @return lineStartStyle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LineAnnotationEndingStyle getLineStartStyle() {
    return lineStartStyle;
  }


  public void setLineStartStyle(LineAnnotationEndingStyle lineStartStyle) {
    this.lineStartStyle = lineStartStyle;
  }


  public LineAnnotationParameters lineEndStyle(LineAnnotationEndingStyle lineEndStyle) {
    
    this.lineEndStyle = lineEndStyle;
    return this;
  }

   /**
   * Get lineEndStyle
   * @return lineEndStyle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LineAnnotationEndingStyle getLineEndStyle() {
    return lineEndStyle;
  }


  public void setLineEndStyle(LineAnnotationEndingStyle lineEndStyle) {
    this.lineEndStyle = lineEndStyle;
  }


  public LineAnnotationParameters showContent(Boolean showContent) {
    
    this.showContent = showContent;
    return this;
  }

   /**
   * Specifies if the popup of annotation shall be opened by default.
   * @return showContent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies if the popup of annotation shall be opened by default.")

  public Boolean getShowContent() {
    return showContent;
  }


  public void setShowContent(Boolean showContent) {
    this.showContent = showContent;
  }


  public LineAnnotationParameters lineWidth(ContentSize lineWidth) {
    
    this.lineWidth = lineWidth;
    return this;
  }

   /**
   * Get lineWidth
   * @return lineWidth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ContentSize getLineWidth() {
    return lineWidth;
  }


  public void setLineWidth(ContentSize lineWidth) {
    this.lineWidth = lineWidth;
  }


  public LineAnnotationParameters absoluteAnnotationLineWidth(Float absoluteAnnotationLineWidth) {
    
    this.absoluteAnnotationLineWidth = absoluteAnnotationLineWidth;
    return this;
  }

   /**
   * Specifies the absolute line width of the annotation, in points.
   * @return absoluteAnnotationLineWidth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the absolute line width of the annotation, in points.")

  public Float getAbsoluteAnnotationLineWidth() {
    return absoluteAnnotationLineWidth;
  }


  public void setAbsoluteAnnotationLineWidth(Float absoluteAnnotationLineWidth) {
    this.absoluteAnnotationLineWidth = absoluteAnnotationLineWidth;
  }


  public LineAnnotationParameters color(String color) {
    
    this.color = color;
    return this;
  }

   /**
   * Specifies the color of the annotation, using the color name (ie: \&quot;red\&quot;) or its RGBa code (ie: \&quot;rgba(255,0,0,1)\&quot;).
   * @return color
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the color of the annotation, using the color name (ie: \"red\") or its RGBa code (ie: \"rgba(255,0,0,1)\").")

  public String getColor() {
    return color;
  }


  public void setColor(String color) {
    this.color = color;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LineAnnotationParameters lineAnnotationParameters = (LineAnnotationParameters) o;
    return Objects.equals(this.lineStartX, lineAnnotationParameters.lineStartX) &&
        Objects.equals(this.lineStartY, lineAnnotationParameters.lineStartY) &&
        Objects.equals(this.lineEndX, lineAnnotationParameters.lineEndX) &&
        Objects.equals(this.lineEndY, lineAnnotationParameters.lineEndY) &&
        Objects.equals(this.title, lineAnnotationParameters.title) &&
        Objects.equals(this.content, lineAnnotationParameters.content) &&
        Objects.equals(this.lineStartStyle, lineAnnotationParameters.lineStartStyle) &&
        Objects.equals(this.lineEndStyle, lineAnnotationParameters.lineEndStyle) &&
        Objects.equals(this.showContent, lineAnnotationParameters.showContent) &&
        Objects.equals(this.lineWidth, lineAnnotationParameters.lineWidth) &&
        Objects.equals(this.absoluteAnnotationLineWidth, lineAnnotationParameters.absoluteAnnotationLineWidth) &&
        Objects.equals(this.color, lineAnnotationParameters.color);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lineStartX, lineStartY, lineEndX, lineEndY, title, content, lineStartStyle, lineEndStyle, showContent, lineWidth, absoluteAnnotationLineWidth, color);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LineAnnotationParameters {\n");
    sb.append("    lineStartX: ").append(toIndentedString(lineStartX)).append("\n");
    sb.append("    lineStartY: ").append(toIndentedString(lineStartY)).append("\n");
    sb.append("    lineEndX: ").append(toIndentedString(lineEndX)).append("\n");
    sb.append("    lineEndY: ").append(toIndentedString(lineEndY)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    lineStartStyle: ").append(toIndentedString(lineStartStyle)).append("\n");
    sb.append("    lineEndStyle: ").append(toIndentedString(lineEndStyle)).append("\n");
    sb.append("    showContent: ").append(toIndentedString(showContent)).append("\n");
    sb.append("    lineWidth: ").append(toIndentedString(lineWidth)).append("\n");
    sb.append("    absoluteAnnotationLineWidth: ").append(toIndentedString(absoluteAnnotationLineWidth)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

