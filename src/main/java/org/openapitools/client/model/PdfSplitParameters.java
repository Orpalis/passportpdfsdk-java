/*
 * PassportPDF API
 * Another brick in the cloud
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.PdfSplitMethod;

/**
 * Represents the parameters for a split action.
 */
@ApiModel(description = "Represents the parameters for a split action.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-04-27T13:23:36.328+02:00[Europe/Paris]")
public class PdfSplitParameters {
  public static final String SERIALIZED_NAME_FILE_ID = "FileId";
  @SerializedName(SERIALIZED_NAME_FILE_ID)
  private String fileId;

  public static final String SERIALIZED_NAME_SPLIT_METHOD = "SplitMethod";
  @SerializedName(SERIALIZED_NAME_SPLIT_METHOD)
  private PdfSplitMethod splitMethod;

  public static final String SERIALIZED_NAME_SPLIT_VALUE = "SplitValue";
  @SerializedName(SERIALIZED_NAME_SPLIT_VALUE)
  private Integer splitValue;

  public static final String SERIALIZED_NAME_IMMEDIATE_DOWNLOAD = "ImmediateDownload";
  @SerializedName(SERIALIZED_NAME_IMMEDIATE_DOWNLOAD)
  private Boolean immediateDownload = false;


  public PdfSplitParameters fileId(String fileId) {
    
    this.fileId = fileId;
    return this;
  }

   /**
   * The identifier of the previously uploaded file to be processed.
   * @return fileId
  **/
  @ApiModelProperty(required = true, value = "The identifier of the previously uploaded file to be processed.")

  public String getFileId() {
    return fileId;
  }


  public void setFileId(String fileId) {
    this.fileId = fileId;
  }


  public PdfSplitParameters splitMethod(PdfSplitMethod splitMethod) {
    
    this.splitMethod = splitMethod;
    return this;
  }

   /**
   * Get splitMethod
   * @return splitMethod
  **/
  @ApiModelProperty(required = true, value = "")

  public PdfSplitMethod getSplitMethod() {
    return splitMethod;
  }


  public void setSplitMethod(PdfSplitMethod splitMethod) {
    this.splitMethod = splitMethod;
  }


  public PdfSplitParameters splitValue(Integer splitValue) {
    
    this.splitValue = splitValue;
    return this;
  }

   /**
   * Specifies, respectively for the SplitByPageCount and SplitByFileSize split methods, the number of pages or the maximum size, in kilobytes, of the produced files.
   * @return splitValue
  **/
  @ApiModelProperty(required = true, value = "Specifies, respectively for the SplitByPageCount and SplitByFileSize split methods, the number of pages or the maximum size, in kilobytes, of the produced files.")

  public Integer getSplitValue() {
    return splitValue;
  }


  public void setSplitValue(Integer splitValue) {
    this.splitValue = splitValue;
  }


  public PdfSplitParameters immediateDownload(Boolean immediateDownload) {
    
    this.immediateDownload = immediateDownload;
    return this;
  }

   /**
   * Specifies whether the file(s) created as a result of the action shall be available for immediate download.
   * @return immediateDownload
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies whether the file(s) created as a result of the action shall be available for immediate download.")

  public Boolean getImmediateDownload() {
    return immediateDownload;
  }


  public void setImmediateDownload(Boolean immediateDownload) {
    this.immediateDownload = immediateDownload;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PdfSplitParameters pdfSplitParameters = (PdfSplitParameters) o;
    return Objects.equals(this.fileId, pdfSplitParameters.fileId) &&
        Objects.equals(this.splitMethod, pdfSplitParameters.splitMethod) &&
        Objects.equals(this.splitValue, pdfSplitParameters.splitValue) &&
        Objects.equals(this.immediateDownload, pdfSplitParameters.immediateDownload);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileId, splitMethod, splitValue, immediateDownload);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PdfSplitParameters {\n");
    sb.append("    fileId: ").append(toIndentedString(fileId)).append("\n");
    sb.append("    splitMethod: ").append(toIndentedString(splitMethod)).append("\n");
    sb.append("    splitValue: ").append(toIndentedString(splitValue)).append("\n");
    sb.append("    immediateDownload: ").append(toIndentedString(immediateDownload)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

