/*
 * PassportPDF API
 * Another brick in the cloud
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Defines the different supported linear barcode symbologies.
 */
@JsonAdapter(Barcode1DSymbology.Adapter.class)
public enum Barcode1DSymbology {
  
  NONE("None"),
  
  INDUSTRIAL2OF5("Industrial2of5"),
  
  INVERTED2OF5("Inverted2of5"),
  
  INTERLEAVED2OF5("Interleaved2of5"),
  
  IATA2OF5("Iata2of5"),
  
  MATRIX2OF5("Matrix2of5"),
  
  CODE39("Code39"),
  
  CODEABAR("Codeabar"),
  
  BCDMATRIX("BcdMatrix"),
  
  DATALOGIC2OF5("DataLogic2of5"),
  
  CODE128("Code128"),
  
  CODE93("CODE93"),
  
  EAN13("EAN13"),
  
  UPCA("UPCA"),
  
  EAN8("EAN8"),
  
  UPCE("UPCE"),
  
  ADD5("ADD5"),
  
  ADD2("ADD2");

  private String value;

  Barcode1DSymbology(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static Barcode1DSymbology fromValue(String value) {
    for (Barcode1DSymbology b : Barcode1DSymbology.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<Barcode1DSymbology> {
    @Override
    public void write(final JsonWriter jsonWriter, final Barcode1DSymbology enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public Barcode1DSymbology read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return Barcode1DSymbology.fromValue(value);
    }
  }
}

