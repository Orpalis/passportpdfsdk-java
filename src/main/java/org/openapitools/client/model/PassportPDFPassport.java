/*
 * PassportPDF API
 * Another brick in the cloud
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * PassportPDFPassport
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-04-27T13:23:36.328+02:00[Europe/Paris]")
public class PassportPDFPassport {
  public static final String SERIALIZED_NAME_PASSPORT_ID = "PassportId";
  @SerializedName(SERIALIZED_NAME_PASSPORT_ID)
  private String passportId;

  public static final String SERIALIZED_NAME_PLAN_ID = "PlanId";
  @SerializedName(SERIALIZED_NAME_PLAN_ID)
  private Integer planId;

  public static final String SERIALIZED_NAME_OPTIONAL_LINKED_SUBSCRIPTION_ID = "OptionalLinkedSubscriptionId";
  @SerializedName(SERIALIZED_NAME_OPTIONAL_LINKED_SUBSCRIPTION_ID)
  private String optionalLinkedSubscriptionId;

  public static final String SERIALIZED_NAME_SUBSCRIPTION_DATE = "SubscriptionDate";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_DATE)
  private OffsetDateTime subscriptionDate;

  public static final String SERIALIZED_NAME_EXPIRATION_DATE = "ExpirationDate";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DATE)
  private OffsetDateTime expirationDate;

  public static final String SERIALIZED_NAME_CURRENT_TOKENS_USED = "CurrentTokensUsed";
  @SerializedName(SERIALIZED_NAME_CURRENT_TOKENS_USED)
  private Long currentTokensUsed;

  public static final String SERIALIZED_NAME_EXTRA_TOKENS = "ExtraTokens";
  @SerializedName(SERIALIZED_NAME_EXTRA_TOKENS)
  private Long extraTokens;

  public static final String SERIALIZED_NAME_EXTRA_TOKENS_END_DATE = "ExtraTokensEndDate";
  @SerializedName(SERIALIZED_NAME_EXTRA_TOKENS_END_DATE)
  private OffsetDateTime extraTokensEndDate;

  public static final String SERIALIZED_NAME_IS_YEARLY_PAID = "IsYearlyPaid";
  @SerializedName(SERIALIZED_NAME_IS_YEARLY_PAID)
  private Boolean isYearlyPaid;

  public static final String SERIALIZED_NAME_IS_ACTIVE = "IsActive";
  @SerializedName(SERIALIZED_NAME_IS_ACTIVE)
  private Boolean isActive;

  public static final String SERIALIZED_NAME_TOKENS_PERCENT_USAGE_ALERT = "TokensPercentUsageAlert";
  @SerializedName(SERIALIZED_NAME_TOKENS_PERCENT_USAGE_ALERT)
  private Integer tokensPercentUsageAlert;

  public static final String SERIALIZED_NAME_TOKENS_PERCENT_USAGE_ALERT_SENT = "TokensPercentUsageAlertSent";
  @SerializedName(SERIALIZED_NAME_TOKENS_PERCENT_USAGE_ALERT_SENT)
  private Boolean tokensPercentUsageAlertSent;

  public static final String SERIALIZED_NAME_IS_MANAGED = "IsManaged";
  @SerializedName(SERIALIZED_NAME_IS_MANAGED)
  private Boolean isManaged;

  public static final String SERIALIZED_NAME_NEXT_MONTHLY_TERM = "NextMonthlyTerm";
  @SerializedName(SERIALIZED_NAME_NEXT_MONTHLY_TERM)
  private OffsetDateTime nextMonthlyTerm;

  public static final String SERIALIZED_NAME_REMAINING_TOKENS = "RemainingTokens";
  @SerializedName(SERIALIZED_NAME_REMAINING_TOKENS)
  private Long remainingTokens;


  public PassportPDFPassport passportId(String passportId) {
    
    this.passportId = passportId;
    return this;
  }

   /**
   * Get passportId
   * @return passportId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPassportId() {
    return passportId;
  }


  public void setPassportId(String passportId) {
    this.passportId = passportId;
  }


  public PassportPDFPassport planId(Integer planId) {
    
    this.planId = planId;
    return this;
  }

   /**
   * Get planId
   * @return planId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPlanId() {
    return planId;
  }


  public void setPlanId(Integer planId) {
    this.planId = planId;
  }


  public PassportPDFPassport optionalLinkedSubscriptionId(String optionalLinkedSubscriptionId) {
    
    this.optionalLinkedSubscriptionId = optionalLinkedSubscriptionId;
    return this;
  }

   /**
   * Get optionalLinkedSubscriptionId
   * @return optionalLinkedSubscriptionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOptionalLinkedSubscriptionId() {
    return optionalLinkedSubscriptionId;
  }


  public void setOptionalLinkedSubscriptionId(String optionalLinkedSubscriptionId) {
    this.optionalLinkedSubscriptionId = optionalLinkedSubscriptionId;
  }


  public PassportPDFPassport subscriptionDate(OffsetDateTime subscriptionDate) {
    
    this.subscriptionDate = subscriptionDate;
    return this;
  }

   /**
   * Get subscriptionDate
   * @return subscriptionDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getSubscriptionDate() {
    return subscriptionDate;
  }


  public void setSubscriptionDate(OffsetDateTime subscriptionDate) {
    this.subscriptionDate = subscriptionDate;
  }


  public PassportPDFPassport expirationDate(OffsetDateTime expirationDate) {
    
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Get expirationDate
   * @return expirationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getExpirationDate() {
    return expirationDate;
  }


  public void setExpirationDate(OffsetDateTime expirationDate) {
    this.expirationDate = expirationDate;
  }


  public PassportPDFPassport currentTokensUsed(Long currentTokensUsed) {
    
    this.currentTokensUsed = currentTokensUsed;
    return this;
  }

   /**
   * Get currentTokensUsed
   * @return currentTokensUsed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getCurrentTokensUsed() {
    return currentTokensUsed;
  }


  public void setCurrentTokensUsed(Long currentTokensUsed) {
    this.currentTokensUsed = currentTokensUsed;
  }


  public PassportPDFPassport extraTokens(Long extraTokens) {
    
    this.extraTokens = extraTokens;
    return this;
  }

   /**
   * Get extraTokens
   * @return extraTokens
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getExtraTokens() {
    return extraTokens;
  }


  public void setExtraTokens(Long extraTokens) {
    this.extraTokens = extraTokens;
  }


  public PassportPDFPassport extraTokensEndDate(OffsetDateTime extraTokensEndDate) {
    
    this.extraTokensEndDate = extraTokensEndDate;
    return this;
  }

   /**
   * Get extraTokensEndDate
   * @return extraTokensEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getExtraTokensEndDate() {
    return extraTokensEndDate;
  }


  public void setExtraTokensEndDate(OffsetDateTime extraTokensEndDate) {
    this.extraTokensEndDate = extraTokensEndDate;
  }


  public PassportPDFPassport isYearlyPaid(Boolean isYearlyPaid) {
    
    this.isYearlyPaid = isYearlyPaid;
    return this;
  }

   /**
   * Get isYearlyPaid
   * @return isYearlyPaid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsYearlyPaid() {
    return isYearlyPaid;
  }


  public void setIsYearlyPaid(Boolean isYearlyPaid) {
    this.isYearlyPaid = isYearlyPaid;
  }


  public PassportPDFPassport isActive(Boolean isActive) {
    
    this.isActive = isActive;
    return this;
  }

   /**
   * Get isActive
   * @return isActive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsActive() {
    return isActive;
  }


  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }


  public PassportPDFPassport tokensPercentUsageAlert(Integer tokensPercentUsageAlert) {
    
    this.tokensPercentUsageAlert = tokensPercentUsageAlert;
    return this;
  }

   /**
   * Get tokensPercentUsageAlert
   * @return tokensPercentUsageAlert
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTokensPercentUsageAlert() {
    return tokensPercentUsageAlert;
  }


  public void setTokensPercentUsageAlert(Integer tokensPercentUsageAlert) {
    this.tokensPercentUsageAlert = tokensPercentUsageAlert;
  }


  public PassportPDFPassport tokensPercentUsageAlertSent(Boolean tokensPercentUsageAlertSent) {
    
    this.tokensPercentUsageAlertSent = tokensPercentUsageAlertSent;
    return this;
  }

   /**
   * Get tokensPercentUsageAlertSent
   * @return tokensPercentUsageAlertSent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getTokensPercentUsageAlertSent() {
    return tokensPercentUsageAlertSent;
  }


  public void setTokensPercentUsageAlertSent(Boolean tokensPercentUsageAlertSent) {
    this.tokensPercentUsageAlertSent = tokensPercentUsageAlertSent;
  }


  public PassportPDFPassport isManaged(Boolean isManaged) {
    
    this.isManaged = isManaged;
    return this;
  }

   /**
   * Get isManaged
   * @return isManaged
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsManaged() {
    return isManaged;
  }


  public void setIsManaged(Boolean isManaged) {
    this.isManaged = isManaged;
  }


   /**
   * Get nextMonthlyTerm
   * @return nextMonthlyTerm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getNextMonthlyTerm() {
    return nextMonthlyTerm;
  }




   /**
   * Get remainingTokens
   * @return remainingTokens
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getRemainingTokens() {
    return remainingTokens;
  }




  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PassportPDFPassport passportPDFPassport = (PassportPDFPassport) o;
    return Objects.equals(this.passportId, passportPDFPassport.passportId) &&
        Objects.equals(this.planId, passportPDFPassport.planId) &&
        Objects.equals(this.optionalLinkedSubscriptionId, passportPDFPassport.optionalLinkedSubscriptionId) &&
        Objects.equals(this.subscriptionDate, passportPDFPassport.subscriptionDate) &&
        Objects.equals(this.expirationDate, passportPDFPassport.expirationDate) &&
        Objects.equals(this.currentTokensUsed, passportPDFPassport.currentTokensUsed) &&
        Objects.equals(this.extraTokens, passportPDFPassport.extraTokens) &&
        Objects.equals(this.extraTokensEndDate, passportPDFPassport.extraTokensEndDate) &&
        Objects.equals(this.isYearlyPaid, passportPDFPassport.isYearlyPaid) &&
        Objects.equals(this.isActive, passportPDFPassport.isActive) &&
        Objects.equals(this.tokensPercentUsageAlert, passportPDFPassport.tokensPercentUsageAlert) &&
        Objects.equals(this.tokensPercentUsageAlertSent, passportPDFPassport.tokensPercentUsageAlertSent) &&
        Objects.equals(this.isManaged, passportPDFPassport.isManaged) &&
        Objects.equals(this.nextMonthlyTerm, passportPDFPassport.nextMonthlyTerm) &&
        Objects.equals(this.remainingTokens, passportPDFPassport.remainingTokens);
  }

  @Override
  public int hashCode() {
    return Objects.hash(passportId, planId, optionalLinkedSubscriptionId, subscriptionDate, expirationDate, currentTokensUsed, extraTokens, extraTokensEndDate, isYearlyPaid, isActive, tokensPercentUsageAlert, tokensPercentUsageAlertSent, isManaged, nextMonthlyTerm, remainingTokens);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PassportPDFPassport {\n");
    sb.append("    passportId: ").append(toIndentedString(passportId)).append("\n");
    sb.append("    planId: ").append(toIndentedString(planId)).append("\n");
    sb.append("    optionalLinkedSubscriptionId: ").append(toIndentedString(optionalLinkedSubscriptionId)).append("\n");
    sb.append("    subscriptionDate: ").append(toIndentedString(subscriptionDate)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    currentTokensUsed: ").append(toIndentedString(currentTokensUsed)).append("\n");
    sb.append("    extraTokens: ").append(toIndentedString(extraTokens)).append("\n");
    sb.append("    extraTokensEndDate: ").append(toIndentedString(extraTokensEndDate)).append("\n");
    sb.append("    isYearlyPaid: ").append(toIndentedString(isYearlyPaid)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    tokensPercentUsageAlert: ").append(toIndentedString(tokensPercentUsageAlert)).append("\n");
    sb.append("    tokensPercentUsageAlertSent: ").append(toIndentedString(tokensPercentUsageAlertSent)).append("\n");
    sb.append("    isManaged: ").append(toIndentedString(isManaged)).append("\n");
    sb.append("    nextMonthlyTerm: ").append(toIndentedString(nextMonthlyTerm)).append("\n");
    sb.append("    remainingTokens: ").append(toIndentedString(remainingTokens)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

