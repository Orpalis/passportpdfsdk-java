/*
 * PassportPDF API
 * Another brick in the cloud
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.AnnotationType;
import org.openapitools.client.model.FreeTextAnnotationParameters;
import org.openapitools.client.model.LineAnnotationParameters;
import org.openapitools.client.model.LinkAnnotationParameters;
import org.openapitools.client.model.RubberStampAnnotationParameters;
import org.openapitools.client.model.SquareAndCircleAnnotationParameters;
import org.openapitools.client.model.StickyNoteAnnotationParameters;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for PdfAnnotateParameters
 */
public class PdfAnnotateParametersTest {
    private final PdfAnnotateParameters model = new PdfAnnotateParameters();

    /**
     * Model tests for PdfAnnotateParameters
     */
    @Test
    public void testPdfAnnotateParameters() {
        // TODO: test PdfAnnotateParameters
    }

    /**
     * Test the property 'fileId'
     */
    @Test
    public void fileIdTest() {
        // TODO: test fileId
    }

    /**
     * Test the property 'pageRange'
     */
    @Test
    public void pageRangeTest() {
        // TODO: test pageRange
    }

    /**
     * Test the property 'annotationType'
     */
    @Test
    public void annotationTypeTest() {
        // TODO: test annotationType
    }

    /**
     * Test the property 'stickyNoteAnnotationParameters'
     */
    @Test
    public void stickyNoteAnnotationParametersTest() {
        // TODO: test stickyNoteAnnotationParameters
    }

    /**
     * Test the property 'linkAnnotationParameters'
     */
    @Test
    public void linkAnnotationParametersTest() {
        // TODO: test linkAnnotationParameters
    }

    /**
     * Test the property 'freeTextAnnotationParameters'
     */
    @Test
    public void freeTextAnnotationParametersTest() {
        // TODO: test freeTextAnnotationParameters
    }

    /**
     * Test the property 'lineAnnotationParameters'
     */
    @Test
    public void lineAnnotationParametersTest() {
        // TODO: test lineAnnotationParameters
    }

    /**
     * Test the property 'squareAndCircleAnnotationParameters'
     */
    @Test
    public void squareAndCircleAnnotationParametersTest() {
        // TODO: test squareAndCircleAnnotationParameters
    }

    /**
     * Test the property 'rubberStampAnnotationParameters'
     */
    @Test
    public void rubberStampAnnotationParametersTest() {
        // TODO: test rubberStampAnnotationParameters
    }

}
