/*
 * PassportPDF API
 * Another brick in the cloud
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.Barcode1DSymbology;
import org.openapitools.client.model.BarcodeType;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for BarcodeInfo
 */
public class BarcodeInfoTest {
    private final BarcodeInfo model = new BarcodeInfo();

    /**
     * Model tests for BarcodeInfo
     */
    @Test
    public void testBarcodeInfo() {
        // TODO: test BarcodeInfo
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'barcode1DSymbology'
     */
    @Test
    public void barcode1DSymbologyTest() {
        // TODO: test barcode1DSymbology
    }

    /**
     * Test the property 'data'
     */
    @Test
    public void dataTest() {
        // TODO: test data
    }

    /**
     * Test the property 'X1'
     */
    @Test
    public void X1Test() {
        // TODO: test X1
    }

    /**
     * Test the property 'X2'
     */
    @Test
    public void X2Test() {
        // TODO: test X2
    }

    /**
     * Test the property 'X3'
     */
    @Test
    public void X3Test() {
        // TODO: test X3
    }

    /**
     * Test the property 'X4'
     */
    @Test
    public void X4Test() {
        // TODO: test X4
    }

    /**
     * Test the property 'Y1'
     */
    @Test
    public void Y1Test() {
        // TODO: test Y1
    }

    /**
     * Test the property 'Y2'
     */
    @Test
    public void Y2Test() {
        // TODO: test Y2
    }

    /**
     * Test the property 'Y3'
     */
    @Test
    public void Y3Test() {
        // TODO: test Y3
    }

    /**
     * Test the property 'Y4'
     */
    @Test
    public void Y4Test() {
        // TODO: test Y4
    }

    /**
     * Test the property 'bboxLeftInches'
     */
    @Test
    public void bboxLeftInchesTest() {
        // TODO: test bboxLeftInches
    }

    /**
     * Test the property 'bboxTopInches'
     */
    @Test
    public void bboxTopInchesTest() {
        // TODO: test bboxTopInches
    }

    /**
     * Test the property 'bboxWidthInches'
     */
    @Test
    public void bboxWidthInchesTest() {
        // TODO: test bboxWidthInches
    }

    /**
     * Test the property 'bboxHeightInches'
     */
    @Test
    public void bboxHeightInchesTest() {
        // TODO: test bboxHeightInches
    }

    /**
     * Test the property 'pageNumber'
     */
    @Test
    public void pageNumberTest() {
        // TODO: test pageNumber
    }

    /**
     * Test the property 'pagePixelWidth'
     */
    @Test
    public void pagePixelWidthTest() {
        // TODO: test pagePixelWidth
    }

    /**
     * Test the property 'pagePixelHeight'
     */
    @Test
    public void pagePixelHeightTest() {
        // TODO: test pagePixelHeight
    }

    /**
     * Test the property 'pageHorizontalResolution'
     */
    @Test
    public void pageHorizontalResolutionTest() {
        // TODO: test pageHorizontalResolution
    }

    /**
     * Test the property 'pageVerticalResolution'
     */
    @Test
    public void pageVerticalResolutionTest() {
        // TODO: test pageVerticalResolution
    }

}
