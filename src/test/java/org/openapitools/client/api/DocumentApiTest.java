/*
 * PassportPDF API
 * Another brick in the cloud
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DocumentCloseParameters;
import org.openapitools.client.model.DocumentCloseResponse;
import org.openapitools.client.model.DocumentGetPreviewResponse;
import org.openapitools.client.model.DocumentLoadResponse;
import java.io.File;
import org.openapitools.client.model.GetDocumentPreviewParameters;
import org.openapitools.client.model.LoadDocumentFromByteArrayParameters;
import org.openapitools.client.model.LoadDocumentFromURIParameters;
import org.openapitools.client.model.LoadDocumentParameters;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DocumentApi
 */
@Ignore
public class DocumentApiTest {

    private final DocumentApi api = new DocumentApi();

    
    /**
     * Closes a previously uploaded document.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void documentCloseTest() throws ApiException {
        DocumentCloseParameters documentCloseParameters = null;
        DocumentCloseResponse response = api.documentClose(documentCloseParameters);

        // TODO: test validations
    }
    
    /**
     * Gets the format, the page count and a thumbnail of a previously uploaded document.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void documentGetPreviewTest() throws ApiException {
        GetDocumentPreviewParameters getDocumentPreviewParameters = null;
        DocumentGetPreviewResponse response = api.documentGetPreview(getDocumentPreviewParameters);

        // TODO: test validations
    }
    
    /**
     * Loads the provided document file.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void documentLoadTest() throws ApiException {
        LoadDocumentFromByteArrayParameters loadDocumentFromByteArrayParameters = null;
        DocumentLoadResponse response = api.documentLoad(loadDocumentFromByteArrayParameters);

        // TODO: test validations
    }
    
    /**
     * Loads the provided document file from an URI.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void documentLoadFromURITest() throws ApiException {
        LoadDocumentFromURIParameters loadDocumentFromURIParameters = null;
        DocumentLoadResponse response = api.documentLoadFromURI(loadDocumentFromURIParameters);

        // TODO: test validations
    }
    
    /**
     * Loads the provided document file using Multipart Upload.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void documentLoadMultipartTest() throws ApiException {
        File fileData = null;
        LoadDocumentParameters loadDocumentParameters = null;
        DocumentLoadResponse response = api.documentLoadMultipart(fileData, loadDocumentParameters);

        // TODO: test validations
    }
    
}
